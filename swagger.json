{
    "swagger": "2.0",
    "info": {
      "title": "My API for Personal Project",
      "description": "CSE341 Personal Project API",
      "version": "1.0.0"
    },
    "host": "cse341-project-ugb4.onrender.com",
    "basePath": "/",
    "schemes": [
      "https"
    ],
    "paths": {
      "/users/": {
        "get": {
          "tags": [
            "users"
          ],
          "description": "Endpoint get all users",
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        },
        "post": {
          "tags": ["users"],
          "summary": "Create user",
          "description": "This is for when a user creates an account",
          "operationId": "createUser",
          "produces": ["application/json"],
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      }
    },
    "definitions": {
      "users": {
        "type": "object",
        "required": ["password", "username"],
        "properties": {
          "_id": {
            "type": "integer",
            "format": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "/users/{id}": {
        "put": {
          "tags": [
            "users"
          ],
          "description": "Endpoint update a user",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "users",
              "in": "body",
              "description": "User Information",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "Jerry"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Marollano"
                  },
                  "email": {
                    "type": "string",
                    "example": "mail@test.com"
                  },
                  "birthday": {
                    "type": "string",
                    "example": "09/25/1987"
                  },
                  "phone": {
                    "type": "string",
                    "example": "1234567890"
                  },
                  "address": {
                    "type": "string",
                    "example": "P-6 POB AREA"
                  }
                },
                "required": [
                    "username",
                  "password",
                  "firstName",
                  "lastName",
                  "email",
                  "birthday",
                  "phone",
                  "address"
                ]
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        },
        "delete": {
          "tags": [
            "users"
          ],
          "description": "Endpoint delete a user",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/users/login": {
        "get": {
          "tags": ["Not Yet Implemented"],
          "summary": "Logs user into the system",
          "operationId": "loginUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "username",
              "in": "query",
              "description": "The user name for login",
              "required": true,
              "type": "string"
            },
            {
              "name": "password",
              "in": "query",
              "description": "The password for login in clear text",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "headers": {
                "X-Rate-Limit": {
                  "type": "integer",
                  "format": "int32",
                  "description": "calls per hour allowed by the user"
                },
                "X-Expires-After": {
                  "type": "string",
                  "format": "date-time",
                  "description": "date in UTC when token expires"
                }
              },
              "schema": {
                "type": "string"
              }
            },
            "400": {
              "description": "Invalid username/password supplied"
            }
          }
        }
      },
      "/users/logout": {
        "get": {
          "tags": ["Not Yet Implemented"],
          "summary": "Logs out current logged in user session",
          "operationId": "logoutUser",
          "produces": ["application/json"],
          "parameters": [],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/user/{username}": {
        "get": {
          "tags": ["users"],
          "summary": "Get user by user name",
          "operationId": "getUserByName",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "The name that needs to be fetched.",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        },
        "put": {
          "tags": ["Not Yet Implemented"],
          "summary": "Updated user",
          "description": "This can only be done by the logged in user.",
          "operationId": "updateUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "name that need to be updated",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Updated user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Successfully modified user"
            },
            "400": {
              "description": "Invalid user supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "delete": {
          "tags": ["Not Yet Implemented"],
          "summary": "Delete user",
          "description": "This can only be done by the logged in user.",
          "operationId": "deleteUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "The name that needs to be deleted",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "204": {
              "description": "Successfully deleted user"
            },
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/api-docs": {
        "get": {
          "description": "",
          "parameters": [],
          "responses": {}
        }
      }
    }
  }
